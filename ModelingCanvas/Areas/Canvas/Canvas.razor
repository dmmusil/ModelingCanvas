@page "/canvas"
@using ModelingCanvas.Domain

<h3>Canvas - @_board.Id</h3>

<p>
    <button @onclick="() => _board.Add(new Command(NewGuid()))">
        Command
    </button>
    <button @onclick="() => _board.Add(new Event(NewGuid()))">
        Event
    </button>
    <button @onclick="() => _board.Add(new View(NewGuid()))">
        View
    </button>
    @if (_board.LinkMode == LinkMode.Active)
    {
        <button @onclick="_board.CancelLinkMode">Cancel Link</button>
    }
</p>

<p style="width: 100%; height: 100vh; position: relative">
    @foreach (var c in _board.Cards)
    {
        <Card 
            Model="c" 
            OnDelete="() => _board.DeleteCard(c)" 
            LinkStarted="() => _board.StartLinkMode(c)" 
            CardToLink="_board.CardToLink" 
            LinkMode="_board.LinkMode" 
            OnAcceptLink="() => _board.Link(c)" 
            OnDragged="StateHasChanged"/>
    }
    @foreach (var link in _board.Links)
    {
        <Link Model="link" OnDelete="() => _board.DeleteLink(link.Source, link.Destination)"/>
    }
</p>
@foreach (var link in _board.Links)
{
    <div>
        Source: @link.Source
        Destination: @link.Destination;
    </div>
}